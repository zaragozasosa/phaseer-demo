"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Config_1=require("./Config"),TextFactory_1=require("./tools/TextFactory"),Grid_1=require("./Grid"),Gameboard=function(){function t(){var t=Config_1.Singleton.getInstance();this.game=t.game,this.config=t.config,this.textFactory=new TextFactory_1.default,this.addBackground(),this.grid=new Grid_1.default(function(){this.updateScore()}.bind(this)),this.movements=0,this.points=this.grid.tilesArray.calculateSum(),this.addHeader(),this.addDebuggingMatrix()}return t.prototype.update=function(){this.grid.update()},t.prototype.addBackground=function(){this.game;var t=this.config,e=t.safeZone.paddingX,i=t.safeZone.paddingY,a=this.game.add.graphics(0,0);a.lineStyle(0),a.beginFill(15197663,1),a.drawRect(e,i,t.safeZone.safeWidth,t.safeZone.safeHeight),a.endFill()},t.prototype.addHeader=function(){this.header=this.textFactory.makeStroked(20,80,"",50),this.updateHeader()},t.prototype.addPowerButton=function(){var t=this.config.safeZone.paddingX+250*this.config.scaleFactor,e=this.config.safeZone.paddingY+1200*this.config.scaleFactor;this.game.add.button(t,e,"button",null,this,1,0,2).scale.setTo(this.config.scaleFactor,this.config.scaleFactor)},t.prototype.addDebuggingMatrix=function(){var t=250,e=1300;this.debugArray=[],this.debugArray.push(this.textFactory.makeStroked(t,e,"",30,!0)),this.debugArray.push(this.textFactory.makeStroked(400,e,"",30,!0)),this.debugArray.push(this.textFactory.makeStroked(550,e,"",30,!0)),this.debugArray.push(this.textFactory.makeStroked(700,e,"",30,!0)),this.updateDebuggingMatrix()},t.prototype.updateScore=function(){this.movements++,this.points=this.grid.tilesArray.calculateSum(),this.updateHeader(),this.updateDebuggingMatrix()},t.prototype.updateDebuggingMatrix=function(){this.debugArray.forEach(function(t,e){t.setText(this.grid.tilesArray.get(e,0)+"\n"+this.grid.tilesArray.get(e,1)+"\n"+this.grid.tilesArray.get(e,2)+"\n"+this.grid.tilesArray.get(e,3))}.bind(this))},t.prototype.updateHeader=function(){this.header.setText("Score: "+this.points+"     Movements: "+this.movements)},t}();exports.default=Gameboard;